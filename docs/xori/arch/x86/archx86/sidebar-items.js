initSidebarItems({"enum":[["InstrOpTypex86",""],["Modex86",""],["OpcodeTypex86",""]],"fn":[["disasmx86",""],["get_byte","Set the next byte and increment the cursor."],["get_int",""],["get_int_signed",""],["peek_byte","Look at the next byte but don't increment the cursor."],["release_byte","Decrement the cursor."]],"struct":[["CodeInfo","the internal assembled code container"],["Displacementx86",""],["Immediatex86",""],["InstrMemx86",""],["InstrOperandsx86",""],["Instructionx86","The internal instruction container"],["ModRmx86","These fields determine the allowable values for the ModR/M fields, which depend on operand and address widths The Mod and R/M fields can encode a base for an effective address, or a register.  These are separated into two fields here"],["Opcodex86",""],["OperandDisplay","The specification for how to extract and interpret one operand."],["PrefixStatex86","Contains the location (for use with the reader) of the prefix byte."],["Registerx86",""],["SibLayout","Scaled-Index-Base byte (SIB) state structure."],["Sizesx86",""],["X86Detail","Instruction Detail"]]});